#+TITLE: SMLコア言語入門
#+AUTHOR: nomaddo
#+LANGUAGE: ja

#+OPTIONS: author:nil creator:nil LaTeX:t
#+OPTIONS: Latex:amsmath LaTeX:dvipng
#+MATHJAX: align:"left" mathml:t

* この章の目的
  最低限SMLコードを理解し話題についていく基礎を与える
* TODO SML/NJのインストール

* TODO 対話環境について
  対話環境の見方を説明する
* 基礎文法
** 全ては式
    例えばC言語では値を返さないものありますが、SMLでは全ては値を返します
    SMLに限らず関数型言語では値を組み合わせてプログラミングしていきます
    #+BEGIN_EXAMPLE
    - 1;
    val it = 1 : int
    - "god is god";
    val it = "god is god" : string
    #+END_EXAMPLE

    if文もCの三項演算子のように値を返します。
    またif文のelse節は省略できません。
    #+BEGIN_EXAMPLE
    - if true then 1 else 2;
    val it = 1 : int
    - (if true then 1 else 2) + 1;
    val it = 2 : int
    #+END_EXAMPLE

** 静的な型検査
    SMLでは静的に（コンパイル時）に型がつきます。
    動的型付け言語などと異なり型が合わないものはエラーになります。

    下の例ではint型の値とreal型（CのDoubleのこと）の値を加算しようとして型エラーになりました。
    #+BEGIN_EXAMPLE
    - 1 + 2.0;
    stdIn:5.1-5.8 Error: operator and operand don't agree [literal]
      operator domain: int * int
      operand:         int * real
      in expression:
        1 + 2.0
    #+END_EXAMPLE
